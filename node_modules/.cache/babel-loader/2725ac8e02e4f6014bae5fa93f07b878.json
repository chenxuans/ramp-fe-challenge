{"ast":null,"code":"var _jsxFileName = \"/Users/chenxuansun/Desktop/ramp-fe-challenge/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false); // 新增状态以跟踪是否还有更多数据可以加载\n\n  const [hasMoreData, setHasMoreData] = useState(true); // 新增状态以跟踪是否是筛选特定用户的交易\n\n  const [isFilteringByEmployee, setIsFilteringByEmployee] = useState(false);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    transactionsByEmployeeUtils.invalidateData();\n    const response = await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false); // 基于响应更新是否还有更多数据的状态\n\n    setHasMoreData(!!(response !== null && response !== void 0 && response.nextPage)); // 重置筛选特定用户的状态\n\n    setIsFilteringByEmployee(false);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    setIsLoading(true);\n    const response = await transactionsByEmployeeUtils.fetchById(employeeId);\n    setIsLoading(false); // 设置为筛选特定用户的状态\n\n    setIsFilteringByEmployee(true); // 筛选特定用户时假定总是有更多数据（或根据实际逻辑调整）\n\n    setHasMoreData(true);\n  }, [transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (!employees && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employees, employeeUtils.loading, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: transactions !== null && (hasMoreData || isFilteringByEmployee) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RampButton\",\n        disabled: isLoading || paginatedTransactionsUtils.loading,\n        onClick: async () => {\n          await loadAllTransactions();\n        },\n        children: \"View More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"t+GFATXwijx+caVuM6rrUa9meB0=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useState","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","App","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","hasMoreData","setHasMoreData","isFilteringByEmployee","setIsFilteringByEmployee","loadAllTransactions","invalidateData","response","fetchAll","nextPage","loadTransactionsByEmployee","employeeId","fetchById","loading","transactions"],"sources":["/Users/chenxuansun/Desktop/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n    const { data: employees, ...employeeUtils } = useEmployees();\n    const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions();\n    const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee();\n    const [isLoading, setIsLoading] = useState(false);\n    // 新增状态以跟踪是否还有更多数据可以加载\n    const [hasMoreData, setHasMoreData] = useState(true);\n    // 新增状态以跟踪是否是筛选特定用户的交易\n    const [isFilteringByEmployee, setIsFilteringByEmployee] = useState(false);\n\n    const loadAllTransactions = useCallback(async () => {\n        setIsLoading(true);\n        transactionsByEmployeeUtils.invalidateData();\n\n        const response = await paginatedTransactionsUtils.fetchAll();\n        setIsLoading(false);\n\n        // 基于响应更新是否还有更多数据的状态\n        setHasMoreData(!!response?.nextPage);\n        // 重置筛选特定用户的状态\n        setIsFilteringByEmployee(false);\n    }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n\n    const loadTransactionsByEmployee = useCallback(\n        async (employeeId: string) => {\n            setIsLoading(true);\n            const response = await transactionsByEmployeeUtils.fetchById(employeeId);\n            setIsLoading(false);\n\n            // 设置为筛选特定用户的状态\n            setIsFilteringByEmployee(true);\n            // 筛选特定用户时假定总是有更多数据（或根据实际逻辑调整）\n            setHasMoreData(true);\n        },\n        [transactionsByEmployeeUtils]\n    );\n\n    useEffect(() => {\n        if (!employees && !employeeUtils.loading) {\n            loadAllTransactions();\n        }\n    }, [employees, employeeUtils.loading, loadAllTransactions]);\n\n    return (\n        <Fragment>\n            <main className=\"MainContainer\">\n                {/* 省略其它UI渲染代码 */}\n\n                {transactions !== null && (hasMoreData || isFilteringByEmployee) && (\n                    <button\n                        className=\"RampButton\"\n                        disabled={isLoading || paginatedTransactionsUtils.loading}\n                        onClick={async () => {\n                            await loadAllTransactions();\n                        }}\n                    >\n                        View More\n                    </button>\n                )}\n            </main>\n        </Fragment>\n    );\n}\n\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAAoDC,QAApD,QAAoE,OAApE;AAIA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,wBAAT,QAAyC,kCAAzC;AACA,SAASC,yBAAT,QAA0C,mCAA1C;;AAIA,OAAO,SAASC,GAAT,GAAe;EAAA;;EAClB,MAAM;IAAEC,IAAI,EAAEC,SAAR;IAAmB,GAAGC;EAAtB,IAAwCN,YAAY,EAA1D;EACA,MAAM;IAAEI,IAAI,EAAEG,qBAAR;IAA+B,GAAGC;EAAlC,IAAiEP,wBAAwB,EAA/F;EACA,MAAM;IAAEG,IAAI,EAAEK,sBAAR;IAAgC,GAAGC;EAAnC,IAAmER,yBAAyB,EAAlG;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C,CAJkB,CAKlB;;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C,CANkB,CAOlB;;EACA,MAAM,CAACgB,qBAAD,EAAwBC,wBAAxB,IAAoDjB,QAAQ,CAAC,KAAD,CAAlE;EAEA,MAAMkB,mBAAmB,GAAGpB,WAAW,CAAC,YAAY;IAChDe,YAAY,CAAC,IAAD,CAAZ;IACAF,2BAA2B,CAACQ,cAA5B;IAEA,MAAMC,QAAQ,GAAG,MAAMX,0BAA0B,CAACY,QAA3B,EAAvB;IACAR,YAAY,CAAC,KAAD,CAAZ,CALgD,CAOhD;;IACAE,cAAc,CAAC,CAAC,EAACK,QAAD,aAACA,QAAD,eAACA,QAAQ,CAAEE,QAAX,CAAF,CAAd,CARgD,CAShD;;IACAL,wBAAwB,CAAC,KAAD,CAAxB;EACH,CAXsC,EAWpC,CAACR,0BAAD,EAA6BE,2BAA7B,CAXoC,CAAvC;EAaA,MAAMY,0BAA0B,GAAGzB,WAAW,CAC1C,MAAO0B,UAAP,IAA8B;IAC1BX,YAAY,CAAC,IAAD,CAAZ;IACA,MAAMO,QAAQ,GAAG,MAAMT,2BAA2B,CAACc,SAA5B,CAAsCD,UAAtC,CAAvB;IACAX,YAAY,CAAC,KAAD,CAAZ,CAH0B,CAK1B;;IACAI,wBAAwB,CAAC,IAAD,CAAxB,CAN0B,CAO1B;;IACAF,cAAc,CAAC,IAAD,CAAd;EACH,CAVyC,EAW1C,CAACJ,2BAAD,CAX0C,CAA9C;EAcAZ,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,SAAD,IAAc,CAACC,aAAa,CAACmB,OAAjC,EAA0C;MACtCR,mBAAmB;IACtB;EACJ,CAJQ,EAIN,CAACZ,SAAD,EAAYC,aAAa,CAACmB,OAA1B,EAAmCR,mBAAnC,CAJM,CAAT;EAMA,oBACI,QAAC,QAAD;IAAA,uBACI;MAAM,SAAS,EAAC,eAAhB;MAAA,UAGKS,YAAY,KAAK,IAAjB,KAA0Bb,WAAW,IAAIE,qBAAzC,kBACG;QACI,SAAS,EAAC,YADd;QAEI,QAAQ,EAAEJ,SAAS,IAAIH,0BAA0B,CAACiB,OAFtD;QAGI,OAAO,EAAE,YAAY;UACjB,MAAMR,mBAAmB,EAAzB;QACH,CALL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAJR;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GA9Ded,G;UACkCH,Y,EACyBC,wB,EACEC,yB;;;KAH7DC,G"},"metadata":{},"sourceType":"module"}